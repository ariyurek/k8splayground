chef --version

which chef
which nano
nano hello.rb
cat hello.rb
sudo chef-client --local-mode hello.rb
cat /hello.txt
 cd ~
touch setup.rb
nano setup.rb
cat setup.rb
sudo chef-client --local-mode setup.rb
which tree
sudo chef-client --local-mode setup.rb


cd ~
chef --help
chef generate --help
chef generate cookbook --help
mkdir cookbooks
chef generate cookbook cookbooks/workstation
tree
cat cookbooks/workstation/metadata.rb
cat cookbooks/workstation/README.md
cat cookbooks/workstation/recipes/default.rb
mv setup.rb cookbooks/workstation/recipes/

cd ~
chef generate cookbook cookbooks/apache
tree
chef generate --help
chef generate recipe cookbooks/apache/server
tree
nano cookbooks/apache/recipes/server.rbcookbooks/apache/recipes/server.rb
chef exec ruby -c cookbooks/apache/recipes/server.rb--> validate
sudo chef-client -z cookbooks/apache/recipes/server.rb --> apply
curl localhost

# 5-2 Applying Recipes and Cookbooks
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor
# run these commands from your vagrant or cloud CentOS 7 instance

cd ~
pwd
ls cookbooks
tree cookbooks/apache
sudo chef-client -z --runlist "apache::server"
sudo chef-client -z "workstation::setup"
sudo chef-client -z --runlist "workstation::setup"
sudo chef-client -z -r "recipe[apache::server]"
sudo chef-client -z -r "recipe[apache::server],recipe[workstation::setup]"


# 5-3 The include_recipe Method
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor
# run these commands from your vagrant or cloud CentOS 7 instance

cd ~
tree cookbooks/workstation
nano cookbooks/workstation/recipes/default.rb
sudo chef-client -z -r "recipe[workstation::default]"
sudo chef-client -z -r "recipe[workstation]"

# 6-2 An Object Called Node
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor
# run these commands from your vagrant or cloud CentOS 7 instance

cd ~
hostname
hostname -I
cat /proc/cpuinfo
cat /proc/meminfo
nano cookbooks/workstation/recipes/setup.rb
sudo chef-client -zr "recipe[workstation]"
cat /etc/motd

# 6-3 Node Attributes
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor
# run these commands from your vagrant or cloud CentOS 7 instance

cd ~
cat /etc/motd
ohai
ohai ipaddress
ohai hostname
ohai memory
ohai memory/total
ohai cpu/0/mhz
nano cookbooks/workstation/recipes/setup.rb
sudo chef-client -zr "recipe[workstation]"
cat /etc/motd

# 6-4 Lab: Node Attributes
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor
# run these commands from your vagrant or cloud CentOS 7 instance

cd ~
ohai ipaddress
ohai hostname
tree cookbooks/apache/
nano cookbooks/apache/recipes/server.rb
sudo chef-client -zr "recipe[apache]"
curl localhost
cd cookbooks/apache/
nano metadata.rb
git status
git add .
git commit -m "index.html includes node attributes for ipaddress and hostname"


# 7-5 Lab Templates
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor
# run these commands from your vagrant or cloud CentOS 7 instance

cd ~
tree cookbooks/apache
chef generate template cookbooks/apache/ index.html
tree cookbooks/apache
nano cookbooks/apache/recipes/server.rb
nano cookbooks/apache/templates/index.html.erb
sudo chef-client -zr "recipe[apache]"
curl localhost
cd cookbooks/apache
nano metadata.rb
git status
git add .
git commit -m "refactored /var/www/html/index.html file resource to template"

# 8-2 cookbook_file
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor
# run these commands from your vagrant or cloud CentOS 7 instance

cd ~
nano cookbooks/apache/recipes/server.rb
chef generate --help
chef generate file cookbooks/apache/ index.html
tree cookbooks/apache
nano cookbooks/apache/files/default/index.html
nano cookbooks/apache/recipes/server.rb
sudo chef-client -z -r "recipe[apache]"
curl localhost


# 8-5 user and group
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor
# run these commands from your vagrant or cloud CentOS 7 instance

cd ~
tree cookbooks/workstation
nano cookbooks/workstation/recipes/setup.rb
sudo chef-client -zr "recipe[workstation]"
cat /etc/passwd
cat /etc/group


# 8-6 notifications
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor
# run these commands from your vagrant or cloud CentOS 7 instance

cd ~
nano cookbooks/workstation/recipes/server.rb
nano cookbooks/workstation/templates/index.html.erb
sudo chef-client -zr "recipe[apache]"


# 9-2 Exploring the ChefDK
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor

# run these commands from your vagrant or cloud CentOS 7 instance after logging in with 'vagrant ssh'

cd ~
chef -v
which chef
which ruby
ruby -v
chef exec ruby -c cookbooks/apache/recipes/server.rb
chef env
chef shell-init
chef --help

# run these commands on your local machine

cd ~
chef -v
which chef
which ruby
ruby -v
chef exec ruby -v


# 9-3 Your Toolkit
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor

# run these commands from your vagrant or cloud CentOS 7 instance after logging in with 'vagrant ssh'

cd ~
chef -v
chef generate --help
chef --help
rspec
tree cookbooks/apache
chef exec rspec --help
kitchen --help
berks --help
knife --help
knife client list
rubocop cookbooks/apache
chef exec rubocop cookbooks/apache
foodcritic --help
chef exec foodcritic --help

# 9-5 Breaking Things
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor

# run these commands from your vagrant or cloud CentOS 7 instance after logging in with 'vagrant ssh'

cd ~
sudo chef-client -zr "recipe[workstation]"

# 9-6 Bonus: Test Kitchen
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor
# https://kitchen.ci/ https://docs.chef.io/workstation/kitchen/ https://docs.chef.io/inspec.html
# these commands are run from the LOCAL machine. 
# Please note that your machine may not be configured
# for Test Kitchen development like in the demoed video.
# https://docs.chef.io/kitchen.html
# https://kitchen.ci

cd ~
pwd
ls
chef generate --help
cd apache/
ls -a
cat .kitchen.yml
nano .kitchen.yml
kitchen list
kitchen create
kitchen list
kitchen login
kitchen converge
kitchen login
kitchen verify
nano test/recipes/default_test.rb
kitchen verify
kitchen destroy



# 9-7 Bonus: ChefSpec
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor

# these commands are run from the LOCAL machine. 
# Please note that your machine may not be configured
# for ChefSpec development like in the demoed video.
# https://docs.chef.io/chefspec.html
# https://github.com/sethvargo/chefspec

cd ~/cookbooks/apache
pwd
tree
chef generate recipe test
tree
chef exec rspec
nano spec/unit/recipes/default_spec.rb
nano spec/spec_helper.rb
chef exec rspec spec/unit/recipes/default_spec.rb

# 10-4 Uploading Cookbooks
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor

# run these commands on your local machine after configuring the ~/chef-repo directory
# and downloading the /cookbooks to your local machine

cd ~/chef-repo
ls
ls cookbooks/
ls -a
ls .chef/
cat .chef/knife.rb
knife --help
knife client list
knife ssl check
knife cookbook --help
knife cookbook list
knife cookbook upload workstation
knife cookbook upload apache
knife cookbook list

# 10-6 Lab: Bootstrap a Webserver
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor

# run these commands on your local machine after copying new Vagrantfile to ~/chef-repo and running 'vagrant up'

cd ~/chef-repo
vagrant status
vagrant ssh-config
knife bootstrap localhost --ssh-port PORT --ssh-user vagrant --sudo --identity-file /PATH/TO/KEY -N web1
knife node list
knife node show web1
knife node run_list add web1 "recipe[workstation],recipe[apache]"
knife node show web1
vagrant ssh web1

# run these commands on the web1 vagrant instance

vagrant@web1$ sudo chef-client
vagrant@web1$ curl localhost


# 11-5 Berkshelf
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor

# run these commands on your local machine after copying new Vagrantfile to ~/chef-repo and running 'vagrant up'

berks --help
cd cookbooks/myhaproxy/
tree
cat Berksfile
cat metadata.rb
clear
pwd
clear
ls
berks install
cd ..
ls
ls ~/.berkshelf/cookbooks/
cd myhaproxy/
berks upload
cookstyle .
berks upload
knife cookbook list
berks upload
vim metadata.rb
berks upload
berks --force
ls
cat Berksfile.lock


# 12-3 Bootstrap Web2 and Update Load Balancer
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor

# run these commands on your local machine after copying new Vagrantfile to ~/chef-repo and running 'vagrant up'

cd ~/chef-repo
vagrant ssh-config
knife bootstrap localhost --ssh-port WEB2_PORT --ssh-user vagrant --identity-file /PATH/TO/WEB2_KEY --sudo -N web2 --run-list "recipe[workstation],recipe[apache]"
vagrant ssh web2
cd cookbooks/myhaproxy
berks install
berks upload
knife cookbook list
knife cookbook show myhaproxy
vagrant ssh load-balancer


# run these commands on the web2 vagrant instance

vagrant@web2$ curl localhost
vagrant@web2$ sudo chef-client
vagrant@web2$ curl localhost
vagrant@web2$ exit

# run these commands on the load-balancer vagrant instance

vagrant@load-balancer$ curl localhost
vagrant@load-balancer$ curl localhost
vagrant@load-balancer$ exit

/*
#
# Cookbook:: myhaproxy
# Recipe:: default
#
# Copyright:: 2018, The Authors, All Rights Reserved.

haproxy_install 'package'

haproxy_frontend 'http-in' do
  bind '*:80'
  default_backend 'servers'
end

haproxy_backend 'servers' do
  server [
  	'web1 192.168.10.43:80 maxconn 32',
  	'web2 192.168.10.44:80 maxconn 32'
  ]
end

haproxy_service 'haproxy' do
	subscribes :reload, 'template[/etc/haproxy/haproxy.cfg]', :immediately
end
*/


# 12-5 Bonus: Run the chef-client on a Schedule
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor

# run these commands on your local machine after copying new Vagrantfile to ~/chef-repo and running 'vagrant up'

cd ~/chef-repo
chef generate cookbook cookbooks/mychef-client
ls cookbooks/
cd cookbooks/mychef-client
nano metadata.rb
nano recipes/default.rb
berks install
berks upload
cd ~/chef-repo
knife node show load-balancer
knife node run_list set load-balancer "recipe[mychef-client],recipe[myhaproxy]"
knife node show load-balancer
vagrant ssh load-balancer

# run these commands on the load-balancer vagrant instance

vagrant@load-balancer$ sudo chef-client
vagrant@load-balancer$ ps awux | grep chef-client
vagrant@load-balancer$ exit
/*
# ~/chef-repo/cookbooks/mychef-client/recipes/default.rb
#
# Cookbook Name:: mychef-client
# Recipe:: default
#
# Copyright (c) 2016 The Authors, All Rights Reserved.

node.default['chef_client']['interval'] = '300'
node.default['chef_client']['splay'] = '60'

include_recipe 'chef-client::default'

# ~/chef-repo/cookbooks/mychef-client/recipes/metadata.rb

name 'mychef-client'
maintainer 'The Authors'
maintainer_email 'you@example.com'
license 'all_rights'
description 'Installs/Configures mychef-client'
long_description 'Installs/Configures mychef-client'
version '0.1.0'

depends 'chef-client', '= 7.0.2'
*/

# 13-4 Lab: Create the Load Balancer Role
# this command list is provided to accompany the demos in the Chef Fundamentals Udemy course
# commands that involve editing files assume nano as the text editor

# run these commands on your local machine after copying new Vagrantfile to ~/chef-repo and running 'vagrant up'

cd ~/chef-repo
ls roles/



# run these commands on the web1 vagrant instance

vagrant@web1$ sudo chef-client
vagrant@web1$ exit

# run these commands on the web2 vagrant instance

vagrant@web2$ sudo chef-client
vagrant@web2$ exit